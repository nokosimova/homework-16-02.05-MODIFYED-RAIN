Многопоточное, Асинхронное, Параллельное программирование.

Все эти три раздела имеют и что-то общее, но у них есть свои отличия.

-Параллельное программирование это способ программирования направленный на
одновренеменное решение нескольких задач с использованием нескольких 
вычислительных устройств, которые одновренеменно будут выполнять эти задачи.
То есть говорить о параллельном программировании на однопроцессорном 
устройстве нет смысла.

Многопоточное программирование и асинхронное программирование. 
Эти два раздела не нужно сравнивать так как оба они относятся в двум неконкурирующим понятиям.
Так как есть синхронные и асинхронные модели. И каждую их них можно 
реализовать в однопоточной или многопоторочной модели. Проще говоря,
можо представить как список:
1) Синхронная модель:         2) Асинхронная модель:
 - В многопоточной              -В многопоточной
 - В однопоточной               - В однопоточной
.Синхронная модель это когда мы запускаем одну задачу и только после
её выполения можем запускать следующую задачу, прерывать или
останавливать задачу мы не можем.
.Асинхронная же модель это позволяет делать. Мы можем запустить задачу,
остановить её, начать другую, потом третью, затем остановить и снова вернуться
в первой задаче.
.Однопоточная модель это когда на выполнение задачи система выполняет 
одну абстрактную "рабочий поток", который может выполнять задачи как 
синхронно(по очереди), так и асинхронно
.Многопоточная- то же самое, но система выделяет более одного потока.
Но важно понимать, что так как ресурсы процессора ограничены, 
то мы должны понимать сколько именно потоков выделять системе. то
есть это не должно быть чем-то динамичным.
Более подробная информация по ссылкам:
1) https://habr.com/ru/post/337528/
2) https://ru.stackoverflow.com/questions/445768/%d0%9c%d0%bd%d0%be%d0%b3%d0%be%d0%bf%d0%be%d1%82%d0%be%d1%87%d0%bd%d0%be%d0%b5-vs-%d0%b0%d1%81%d0%b8%d0%bd%d1%85%d1%80%d0%be%d0%bd%d0%bd%d0%be%d0%b5-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d0%b5/416086#416086


